{"version":3,"sources":["api/contacts.js","components/Header.js","components/AddContactc.jsx","components/ContactCard.js","components/ContactList.js","Images/contact.png","components/ContactDetail.js","components/DeleteContact.js","components/EditContact copy.jsx","components/App.js","index.js"],"names":["axios","create","baseURL","Header","className","style","color","AddContactc","props","useState","state","setState","marginTop","maxWidth","paddingLeft","onSubmit","e","preventDefault","name","email","addContactHandler","history","push","alert","type","placeholder","value","onChange","target","marginLeft","ContactCard","contact","id","to","pathname","onClick","clickHandler","ContactList","console","log","inputElement","useRef","deleteContactHandler","getContactId","renderContactList","contacts","map","textAlign","display","ref","term","searchKeyword","current","length","ContactDetail","location","src","alt","DeleteContact","deleteString","EditContactc","useEffect","updateContactHandler","App","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retriveContacts","a","api","get","response","data","request","uuid","post","put","removeContactHandler","delete","newContactList","filter","serachHandler","Object","values","join","toLowerCase","includes","allContacts","getAllContacts","localStorage","setItem","JSON","stringify","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a5b675f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3006/\",\r\n});\r\n\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n      <>\r\n    <div className=\"ui fixed menu\">\r\n      <div className=\"ui container center \">\r\n        <h2 style={{ color: \"red\"}}>          \r\n          Contact Manager \r\n        </h2>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react'\r\n\r\n const AddContactc = (props) => {\r\n     const [state, setState] = useState({});\r\n\r\n     const add = (e) => {\r\n        e.preventDefault();\r\n\r\n         \r\n    \r\n        if ( state.name === \"\" ||  state.email === \"\") {\r\n          alert(\"All the fields are mandatory!\");\r\n    \r\n          return;\r\n        }\r\n       \r\n        props.addContactHandler(state);\r\n    \r\n        \r\n        setState({ name: \"\", email: \"\" });    \r\n      \r\n    \r\n        props.history.push(\"/\");\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ui main\" style={{marginTop:'2rem' ,maxWidth:'90%',paddingLeft:'2rem'}}>\r\n        <br />\r\n\r\n        <h2>Add Contact</h2>\r\n\r\n        <form className=\"ui form\" onSubmit={add}>\r\n          <div className=\"field\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={state.name}\r\n              onChange={(e) => setState({ ...state, name: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={state.email}\r\n              onChange={(e) => setState({ ...state, email: e.target.value })}\r\n            />\r\n          </div>\r\n          <button className=\"ui button blue\" style={{marginLeft:'2rem'}}>Add</button>\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddContactc;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import user from '../Images/user.png'\r\n\r\nconst ContactCard = (props) => {\r\n  const { id, name, email } = props.contact;\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <i className=\"user outline icon\"></i>\r\n      {/* <img className=\"ui avatar image \" src={user} alt=\"user-icon\" /> */}\r\n      <div className=\"content\">\r\n        <Link\r\n          to={ {pathname:`/contact/${id}`,state:{contact: props.contact} }}\r\n        >\r\n          <div className=\"header\">{name}</div>\r\n          <div>{email}</div>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/delete\">\r\n      <i\r\n        className=\"trash alternate outline icon \"\r\n        style={{ color: \"red\",marginLeft:'99%'}}\r\n        onClick={() => props.clickHandler(id)} //  passing as props from Contactlist\r\n      ></i>\r\n      </Link>\r\n\r\n      <Link\r\n          to={ {pathname:`/edit`,state:{contact: props.contact} }}\r\n        >\r\n      <i\r\n        className=\"edit alternate outline icon \"\r\n        style={{ color: \"blue\"}}\r\n       \r\n      ></i>\r\n      </Link>\r\n       \r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React, { useRef } from \"react\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContactList = (props) => {\r\n  console.log(props);\r\n  const inputElement = useRef(\"\");\r\n\r\n  const deleteContactHandler = (id) => {\r\n    // get the id from the ContactCard\r\n    props.getContactId(id); // get the id from apps as props\r\n  };\r\n\r\n  const renderContactList = props.contacts.map((contact) => {\r\n    // when we use contact.id in key we can delete id from here\r\n    return (\r\n      <ContactCard\r\n        // key={id} // with the help of uuid we don't assign in map index or id we simply put this\r\n        contact={contact}\r\n        clickHandler={deleteContactHandler}\r\n        key={contact.id}\r\n      />\r\n    ); //passing and getting props vlaues\r\n  });\r\n\r\n  const getSearchTerm = () => {\r\n    props.searchKeyword(inputElement.current.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <h2\r\n          style={{ color: \"skyblue\", textAlign: \"center\", marginTop: \"3rem\" }}\r\n        >\r\n          Contact List\r\n        </h2>\r\n\r\n        <div style={{ display: \"flex\" }}>\r\n          {/* \"(TO) prop are taking a path\" - it's Clickable link so we can put any where  */}\r\n          <Link to=\"/add\">\r\n            <button className=\"ui button blue\" style={{ marginLeft: \"2rem\" }}>\r\n              Add Contact\r\n            </button>\r\n          </Link>\r\n          <div className=\"ui search\" style={{ marginLeft: \"50%\" }}>\r\n            <div className=\"ui icon input\">\r\n              <input\r\n                ref={inputElement}\r\n                type=\"text\"\r\n                placeholder=\"Search Contacts\"\r\n                className=\"prompt\"\r\n                value={props.term}\r\n                onChange={getSearchTerm}\r\n              />\r\n              <i className=\"search icon\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginLeft:'1rem'}} className=\"ui celled list\">           \r\n          {renderContactList.length > 0\r\n            ? renderContactList\r\n            : \"No Contact In List\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","export default __webpack_public_path__ + \"static/media/contact.85973849.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport contact from \"../Images/contact.png\";\r\n\r\nconst ContactDetail = (props) => {\r\n  const { name, email } = props.location.state.contact;\r\n\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"main\" style={{ marginTop: \"3.5rem\" }}>\r\n      <div className=\"ui card centered\">\r\n        <div className=\"image\" style={{ marginTop: \"1.5rem\" }}>\r\n          <img src={contact} alt=\"contact\" />\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <div className=\"header\">{name}</div>\r\n          <div className=\"description\">{email}</div>\r\n        </div>\r\n      </div>\r\n     \r\n      <div className=\"center-div\" style={{ textAlign: \"center\" }}>\r\n      <Link to=\"/\">\r\n        <button className=\"ui button blue centered\">Go to Contacts List</button>\r\n        </Link>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactDetail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DeleteContact = (props) => {\r\n    \r\n    console.log(props.deleteString);\r\n\r\n    // alert('Are you sure to delete');\r\n\r\n    return (\r\n        <div style={{marginTop:'4rem', textAlign: \"center\"}}>\r\n            <h1> {props.deleteString} </h1>\r\n            <Link to=\"/\">\r\n        <button className=\"ui button blue centered\">Go to Contacts List</button>\r\n        </Link>\r\n   \r\n        </div>\r\n    )\r\n}\r\nexport default DeleteContact;","import React, { useEffect, useState } from \"react\";\r\n\r\n  const EditContactc = (props) =>  {\r\n  \r\n    const [state, setState] = useState({})\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n      const { id, name, email } = props.location.state.contact;\r\n      setState({\r\n        id,\r\n        name, \r\n        email\r\n      })\r\n   \r\n    }, [])\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n\r\n    //using for empty form\r\n\r\n    if (state.name === \"\" || state.email === \"\") {\r\n      alert(\"All the fields are mandatory!\");\r\n\r\n      return;\r\n    }\r\n    // get this data form app\r\n    props.updateContactHandler(state);\r\n\r\n    //for clear this form fields\r\n    setState({ name: \"\", email: \"\" });\r\n\r\n    // using Conditional Router For redirects the page after click the (add) button\r\n\r\n    props.history.push(\"/\");\r\n\r\n    // get objectArrray - console.log(state);\r\n  };\r\n\r\n  \r\n    return (\r\n      <div\r\n        className=\"ui main\"\r\n        style={{ marginTop: \"4rem\", maxWidth: \"90%\", paddingLeft: \"2rem\" }}\r\n      > \r\n\r\n\r\n        <h2>Edit Contact</h2>\r\n\r\n        <form className=\"ui form\" onSubmit={update}>\r\n          <div className=\"field\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={state.name}\r\n              onChange={(e) => setState({...state,name: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={state.email}\r\n              onChange={(e) => setState({ ...state, email: e.target.value })}\r\n            />\r\n          </div>\r\n          <button className=\"ui button blue\" style={{ marginLeft: \"2rem\" }}>\r\n            Update\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n \r\n\r\nexport default EditContactc;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// cmd - npm i uuid4  - this package is going to give us the unique id for each of our contact\nimport api from \"../api/contacts\";\nimport { uuid } from \"uuidv4\";\nimport Header from \"./Header\";\n// import AddContact from \"./AddContact\";\nimport AddContactc from \"./AddContactc\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport DeleteContact from \"./DeleteContact\";\n// import EditContact from \"./EditContact\";\nimport EditContactc from \"./EditContact copy\";\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //RetriveContacts with the help of api's\n\n  const retriveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  // // Array objects hard code Passing the value\n  // const contacts = [\n  //   {\n  //     id: \"1\",\n  //     name: \"Ankit Sharma\",\n  //     email: \"ankitsharma@gmail.com\",\n  //   },\n  //   {\n  //     id: \"2\",\n  //     name: \"Ankit Gupta\",\n  //     email: \"ankitgupta@gmail.com\",\n  //   },\n  //   {\n  //     id: \"3\",\n  //     name: \"Aman Sharma\",\n  //     email: \"amansharma@gmail.com\",\n  //   },\n  // ];\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]); // add the data via post call\n    // setContacts([...contacts, { id: uuid(), ...contact }]); // (without api call old)  uuid give us id and ...Contacts give us name and email\n    // console.log(contact);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n  \n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    // Delete Function\n    const newContactList = contacts.filter((contact) => {\n      // we are going to create the copy of contacts\n      return contact.id !== id;\n    });\n    setContacts(newContactList); //change the contact state\n  };\n\n  const serachHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        return Object.values(contact)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    }\n    else{\n      setSearchResults(contacts);\n    }\n  };\n\n  const deleteString = \" Contact Deleted \";\n\n  //retriveing the Data using jsonparse Convert String to js Object\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllContacts = async () => {\n      const allContacts = await retriveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n    getAllContacts();\n  }, []);\n\n  // passing the data from localStorage\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      {/* with Routing */}\n      <Router>\n        <Header />\n        <Switch>\n          {/* Now we use Arrow Fun for passing function props */}\n          {/* there are two type of routing when we use component base its create compontent every time  */}\n          {/* there is one another way which is render fun */}\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={searchTerm.length < 1? contacts : searchResults}\n                getContactId={removeContactHandler}\n                term={searchTerm}\n                searchKeyword={serachHandler}\n              />\n            )}\n          />\n\n          {/* <Route path=\"/\" exact component={() => (<ContactList contacts={contacts} getContactId={removeContactHandler} />) } /> exact prop match the exact url  */}\n\n          {/* <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler} />\n            )}\n          /> */}\n             <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContactc {...props} addContactHandler={addContactHandler} />\n            )}\n          />  \n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContactc\n                {...props}\n                updateContactHandler={updateContactHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n\n          {/* <Route\n            path=\"/add\"\n            component={() => (\n              <AddContact addContactHandler={addContactHandler} />\n            )}\n          /> */}\n          <Route\n            path=\"/delete\"\n            render={(props) => (\n              <DeleteContact {...props} deleteString={deleteString} />\n            )}\n          />\n          {/* <Route path=\"/delete\" component={DeleteContact}> </Route> */}\n        </Switch>\n\n        {/* without Routing  */}\n\n        {/* <AddContact addContactHandler={addContactHandler} /> */}\n        {/* <ContactList contacts={contacts} getContactId={removeContactHandler} /> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}